#pragma once // -*- C++ -*-

/**
 * \file turner/msturn
 * MS-TURN protocol
 */

#include <turner/__bits/lib>
#include <turner/attribute_type>
#include <turner/attribute_value_type>
#include <turner/basic_message_reader>
#include <turner/message_type>
#include <pal/result>
#include <array>
#include <span>

__turner_begin


/**
 * MS-TURN protocol requests/attributes
 *
 * \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn
 *
 * \note MS-TURN requires Magic Cookie to be 1st attribute immediately after
 * message header. To simplify reader/writer, we treat it as binary blob
 * instead i.e. Magic Cookie contains attribute Type and Length fields.
 */
struct msturn
{
	/// MS-TURN message header size
	static constexpr size_t header_size_bytes = 20;

	/// MS-TURN message attribute padding boundary
	static constexpr size_t pad_size_bytes = 4;

	/// Magic Cookie offset from beginning of message
	static constexpr size_t cookie_offset = header_size_bytes;

	/// MS-TURN message cookie type
	using cookie_type = std::array<uint8_t, 8>;

	/// MS-TURN message Magic Cookie value
	static constexpr cookie_type magic_cookie =
	{
		0x00, 0x0f, 0x00, 0x04,
		0x72, 0xc6, 0x4b, 0xc6,
	};

	/// Transaction ID offset from beginning of message
	static constexpr size_t transaction_id_offset = 4;

	/// MS-TURN message transaction ID type
	using transaction_id_type = std::array<uint8_t, 16>;

	/**
	 * \defgroup MSTURN_Methods MS-TURN Method registry
	 * \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/8177788b-1f38-47a5-8a6f-348e89717922
	 * \{
	 */

	/// MS-TURN Allocate request
	static constexpr message_type<msturn> allocate = 0x0003;

	/// MS-TURN Allocate request success response
	static constexpr auto allocate_success = allocate.success_response();

	/// MS-TURN Allocate request error response
	static constexpr auto allocate_error = allocate.error_response();

	/// MS-TURN Send Request
	static constexpr message_type<msturn> send_indication = 0x0004;

	/// MS-TURN Data Indication
	static constexpr message_type<msturn> data_indication = 0x0115;

	/// MS-TURN Set Active Destination request
	static constexpr message_type<msturn> set_active_destination = 0x0006;

	/// MS-TURN Set Active Destination request success response
	static constexpr auto set_active_destination_success = set_active_destination.success_response();

	/// MS-TURN Set Active Destination request error response
	static constexpr auto set_active_destination_error = set_active_destination.error_response();

	/// \}

	/**
	 * \defgroup MSTURN_Attributes MS-TURN Attribute Registry
	 * \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/0e0491de-b648-4347-bae4-503c7347abbe
	 * \{
	 */

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/735464a2-28e3-423f-8b65-19dd4b4dbc52
	static constexpr attribute_type<msturn, uint16_t> mapped_address = 0x0001;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/bbf7bc45-93b6-495e-adcc-685d270a2eae
	static constexpr attribute_type<msturn, string_value_type<>> username = 0x0006;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/dfa0f83e-8c18-468c-a183-baa534a7f54c
	static constexpr attribute_type<msturn, uint16_t> message_integrity = 0x0008;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/91972889-8dfd-43d1-885e-7d135bd91c2d
	static constexpr attribute_type<msturn, uint16_t> error_code = 0x0009;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/2b097c56-f250-43fe-970e-66ca08b2dfcd
	static constexpr attribute_type<msturn, uint16_t> unknown_attributes = 0x000a;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/46555d94-a165-40c9-a5ff-4d841d4d012a
	static constexpr attribute_type<msturn, seconds_value_type> lifetime = 0x000d;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/c8ebc611-c0c4-48c4-b7da-47e57b3f96c3
	static constexpr attribute_type<msturn, uint16_t> alternate_server = 0x000e;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/f98b6d22-e8e2-4817-b936-5904402d1788
	static constexpr attribute_type<msturn, uint32_value_type> bandwidth = 0x0010;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/9cd7e664-7c19-4464-ab05-761b4ca39372
	static constexpr attribute_type<msturn, uint16_t> destination_address = 0x0011;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/cf5c3756-d0a7-414e-8a14-c54786e34dbc
	static constexpr attribute_type<msturn, uint16_t> remote_address = 0x0012;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/d9dd90bc-5bd3-4daa-89ac-0d70c5a1cb81
	static constexpr attribute_type<msturn, uint16_t> data = 0x0013;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/129e9c99-7d4b-4c8c-abd0-8d7a5874d73d
	static constexpr attribute_type<msturn, string_value_type<128>> nonce = 0x0014;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/108c58d4-129d-4ba5-b12b-fc6c1a54e7b3
	static constexpr attribute_type<msturn, string_value_type<128>> realm = 0x0015;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/e7efc457-9312-4a6b-8089-94032a599198
	static constexpr attribute_type<msturn, uint16_t> requested_address_family = 0x0017;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/a972c937-780a-476a-915a-b81869428342
	static constexpr attribute_type<msturn, uint16_t> ms_version = 0x8008;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/d6f3f10a-b5f2-423a-af1d-a1d69b09ddab
	static constexpr attribute_type<msturn, uint16_t> xor_mapped_address = 0x8020;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/69ca1e1a-7423-4a3a-8618-f0bf76383cdc
	static constexpr attribute_type<msturn, string_value_type<128>> ms_alternate_host_name = 0x8032;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/0a4bffc9-6cdc-4525-b76d-34a3606a7603
	static constexpr attribute_type<msturn, uint32_value_type> app_id = 0x8037;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/571bc09c-81b7-4e53-a64b-1b1c2278b7cb
	static constexpr attribute_type<msturn, uint16_t> secure_tag = 0x8039;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/bf1907a9-2135-41fb-8316-5988f1438ab1
	static constexpr attribute_type<msturn, uint16_t> ms_sequence_number = 0x8050;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/e6add235-93a1-4802-b05a-1dabb1544344
	static constexpr attribute_type<msturn, uint16_t> ms_service_quality = 0x8055;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/3a99a9cf-7757-4d9a-87b6-688bcfe15f10
	static constexpr attribute_type<msturn, uint16_t> ms_alternate_mapped_address = 0x8090;

	/// \see https://docs.microsoft.com/en-us/openspecs/office_protocols/ms-turn/8192de42-81aa-453b-b4f4-77d4889da70e
	static constexpr attribute_type<msturn, uint16_t> multiplexed_session_id = 0x8095;

	/// \}

	/// Generic MS-TURN message reader
	using message_reader = basic_message_reader<msturn>;

	/**
	 * Validates \a span contains MS-TURN message and returns generic message reader
	 *
	 * \note This method does not check for known MS-TURN message/attribute types,
	 * only message structure validity.
	 */
	static pal::result<message_reader> read_message (std::span<const std::byte> span) noexcept;
};


__turner_end
